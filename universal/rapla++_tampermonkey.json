{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Rapla++","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_prototypes":false,"noframes":null,"run_at":"document-start","override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["https://rapla.dhbw-karlsruhe.de/rapla?page=calendar*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"ts":1630772087612,"data":{}},"enabled":true,"position":1,"uuid":"9df1a900-a952-4bc6-ae48-9bdeb84b5300","source":""}]}